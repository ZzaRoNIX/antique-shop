# Generated by Django 3.1.2 on 2023-12-25 14:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название*')),
                ('is_main', models.BooleanField(default=False, verbose_name='Является основной категорией?')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_1', models.ImageField(upload_to='Products', verbose_name='Фотография №1*')),
                ('img_mini', models.ImageField(blank=True, null=True, upload_to='Products', verbose_name='Фотография №1 мини')),
                ('img_2', models.ImageField(blank=True, upload_to='Products', verbose_name='Фотография №2')),
                ('img_3', models.ImageField(blank=True, upload_to='Products', verbose_name='Фотография №3')),
                ('img_4', models.ImageField(blank=True, upload_to='Products', verbose_name='Фотография №4')),
                ('img_5', models.ImageField(blank=True, upload_to='Products', verbose_name='Фотография №5')),
                ('name', models.CharField(max_length=100, verbose_name='Название*')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание*')),
                ('price', models.IntegerField(null=True, verbose_name='Цена*')),
                ('sale_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Цена по скидке')),
                ('is_contract_price', models.BooleanField(default=False, verbose_name='Договорная цена')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='main_app.category', verbose_name='Категория*')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('delivery_type', models.CharField(choices=[('Самовывоз', 'Самовывоз'), ('СДЭК', 'СДЭК'), ('DHL', 'DHL')], default='none', max_length=64, verbose_name='Способ получения заказа')),
                ('status', models.CharField(choices=[('В обработке', 'В обработке'), ('Выполнен', 'Выполнен'), ('Отменен', 'Отменен')], default='В обработке', max_length=64, verbose_name='Статус заказа')),
                ('products', models.ManyToManyField(related_name='orders', to='main_app.Product', verbose_name='Продукты')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
    ]
